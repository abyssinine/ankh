<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>512.1</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionNameComment</key>
				<string>scrcpy toggle</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>tell application "System Events" --make sure the program is running at all before starting	if exists process "scrcpy" then		set appWindow to first window of process "scrcpy"	else		return	end ifend tellif appWindow is not null then	tell application "System Events" -- assign vars for desktop/window/menu sizes and create a loop counter		tell application "Finder" to set sizeDesktop to bounds of window of desktop		activate process "scrcpy"		set swipeDistance to size of appWindow		set menuHt to 24		set desktopWidth to (item 3 of sizeDesktop)		set swipeProgress to 0		set swipeWidth to ¬			{(item 1 of swipeDistance)}		if (item 2 of swipeDistance) &gt; swipeWidth then			set winHt to ((item 4 of sizeDesktop) - menuHt)		else			set winHt to (item 2 of swipeDistance)		end if		set swipeSpeed to (swipeWidth / 6)		set swipeBounds to (desktopWidth - swipeWidth)		if not visible of process "scrcpy" then -- reveal the window by focusing and setting origin closer to desktop with space for scrcpy			set visible of process "scrcpy" to true			set frontmost of process "scrcpy" to true			tell process "scrcpy"				perform action "AXRaise" of first window				repeat while swipeBounds is less than (desktopWidth - swipeProgress)					set swipeProgress to (swipeProgress + swipeSpeed)					set resWD to (desktopWidth - swipeProgress)					set position of first window to ¬						{resWD, menuHt}				end repeat			end tell		else			set visible of process "scrcpy" to true -- hide the window by focusing and setting origin closer to desktop max, then defocusing			set frontmost of process "scrcpy" to true			tell process "scrcpy"				repeat while (swipeBounds + swipeProgress) is less than desktopWidth					set swipeProgress to (swipeProgress + swipeSpeed)					set resWD to (swipeBounds + swipeProgress)					set position of first window to ¬						{resWD, menuHt}				end repeat				set visible to false			end tell		end if	end tell		tell application "System Events"		tell process "scrcpy" to set size to {(item 1 of swipeDistance), winHt}	end tellend if</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>41E77249-3D40-45A3-80E1-EFE733C2D7C1</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>E450D45F-0D68-4A78-A081-05592AF46E73</string>
				<key>UUID</key>
				<string>95C4E265-A003-47AF-8591-1C232E5E3FC1</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>529.000000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>variables</key>
	<array>
		<dict>
			<key>UUID</key>
			<string>41757EBE-79AE-449C-94F2-6D506E38144F</string>
			<key>identifier</key>
			<string>com.apple.Automator.Variable.Storage</string>
			<key>name</key>
			<string>Nomachine</string>
		</dict>
	</array>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSTouchBarCommunicationAudio</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
